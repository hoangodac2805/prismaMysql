// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  userName     String
  firstName    String?
  lastName     String?
  email        String   @unique
  password     String
  isActive     Boolean  @default(true)
  avatar       Avatar?  @relation("CurrentAvatar")
  usedAvatars  Avatar[] @relation("UsedAvatars")
  tokenVersion Int      @default(0)
  role         Role     @default(USER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Avatar {
  id            Int      @id @default(autoincrement())
  uuid          String   @unique @default(uuid())
  url           String    
  currentUser   User?    @relation("CurrentAvatar", fields: [currentUserId], references: [id], onDelete: Cascade)
  currentUserId Int?     @unique
  usedUser      User?     @relation("UsedAvatars", fields: [usedUserId], references: [id], onDelete: Cascade)
  usedUserId    Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}
